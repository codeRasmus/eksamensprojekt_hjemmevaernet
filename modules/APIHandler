import OpenAI from "openai";

// Initialize OpenAI client
const openai = new OpenAI({
    apiKey: process.env.OPENAI_API_KEY,
    organization: process.env.OPENAI_ORG_ID,
});

let assistantId;
let threadId;

// Initialize Assistant and Thread (if not already initialized)
async function initializeAssistantAndThread() {
    if (!assistantId) {
        const assistant = await openai.beta.assistants.create({
            name: "ChatBot",
            instructions: "You are a helper for volunteer tutors at 'HjemmevÃ¦rnsskolen'.",
            tools: [{ type: "file_search" }],
            model: "gpt-4o",
        });
        assistantId = assistant.id;
    }
    if (!threadId) {
        const thread = await openai.beta.threads.create();
        threadId = thread.id;
    }
}

// Process user message and stream assistant's response
export async function processUserMessage(question, onTextDelta) {
    await initializeAssistantAndThread();

    // Add user message to thread
    await openai.beta.messages.create(threadId, { role: "user", content: question });

    // Stream assistant response
    const run = await openai.beta.threads.runs.stream(threadId, { assistant_id: assistantId })
        .on("textDelta", textDelta => {
            if (onTextDelta) onTextDelta(textDelta.value); // Send chunk to server
        });

    return run;
}
